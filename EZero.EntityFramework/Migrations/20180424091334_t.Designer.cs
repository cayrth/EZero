// <auto-generated />
using EZero.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EZero.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180424091334_t")]
    partial class t
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EZero.Domain.Model.Admin.Syspermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Icon")
                        .HasMaxLength(32);

                    b.Property<bool>("IsNavigation");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<int?>("Pid");

                    b.Property<int>("SerialNumber");

                    b.Property<string>("SyspermissionName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("SyspermissionTitle")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("Pid");

                    b.HasIndex("SyspermissionName")
                        .IsUnique();

                    b.ToTable("Syspermission");
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.Sysrole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<int>("SerialNumber");

                    b.Property<string>("SysroleName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Sysrole");
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.SysroleSyspermission", b =>
                {
                    b.Property<int>("SysroleId");

                    b.Property<int>("SyspermissionId");

                    b.HasKey("SysroleId", "SyspermissionId");

                    b.HasIndex("SyspermissionId");

                    b.ToTable("SysroleSyspermission");
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.Sysuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Sysuser");
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.SysuserSysrole", b =>
                {
                    b.Property<int>("SysuserId");

                    b.Property<int>("SysroleId");

                    b.HasKey("SysuserId", "SysroleId");

                    b.HasIndex("SysroleId");

                    b.ToTable("SysuserSysrole");
                });

            modelBuilder.Entity("EZero.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Email")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<string>("Mobile")
                        .HasMaxLength(16);

                    b.Property<string>("Realname")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.Syspermission", b =>
                {
                    b.HasOne("EZero.Domain.Model.Admin.Syspermission", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("Pid");

                    b.OwnsOne("EZero.Domain.Model.Admin.ValueObject.SyspermissionRouteVO", "SyspermissionRoute", b1 =>
                        {
                            b1.Property<int>("SyspermissionId");

                            b1.Property<string>("Action")
                                .HasColumnName("Action")
                                .HasMaxLength(32);

                            b1.Property<string>("Area")
                                .HasColumnName("Area")
                                .HasMaxLength(32);

                            b1.Property<string>("Controller")
                                .HasColumnName("Controller")
                                .HasMaxLength(32);

                            b1.ToTable("Syspermission");

                            b1.HasOne("EZero.Domain.Model.Admin.Syspermission")
                                .WithOne("SyspermissionRoute")
                                .HasForeignKey("EZero.Domain.Model.Admin.ValueObject.SyspermissionRouteVO", "SyspermissionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.SysroleSyspermission", b =>
                {
                    b.HasOne("EZero.Domain.Model.Admin.Syspermission", "Syspermission")
                        .WithMany("SysroleSyspermissions")
                        .HasForeignKey("SyspermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EZero.Domain.Model.Admin.Sysrole", "Sysrole")
                        .WithMany("SysroleSyspermissions")
                        .HasForeignKey("SysroleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EZero.Domain.Model.Admin.SysuserSysrole", b =>
                {
                    b.HasOne("EZero.Domain.Model.Admin.Sysrole", "Sysrole")
                        .WithMany("SysuserSysroles")
                        .HasForeignKey("SysroleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EZero.Domain.Model.Admin.Sysuser", "Sysuser")
                        .WithMany("SysuserSysroles")
                        .HasForeignKey("SysuserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
